"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[31450],{26742:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>u});var o=n(85893),s=n(11151);const r={id:"use-route",title:"useRoute",sidebar_label:"useRoute"},i=void 0,c={id:"use-route",title:"useRoute",description:"useRoute is a hook which gives access to route object. It's useful when you cannot pass the route prop into the component directly, or don't want to pass it in case of a deeply nested child.",source:"@site/versioned_docs/version-6.x/use-route.md",sourceDirName:".",slug:"/use-route",permalink:"/docs/6.x/use-route",draft:!1,unlisted:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-6.x/use-route.md",tags:[],version:"6.x",frontMatter:{id:"use-route",title:"useRoute",sidebar_label:"useRoute"},sidebar:"docs",previous:{title:"useNavigation",permalink:"/docs/6.x/use-navigation"},next:{title:"useNavigationState",permalink:"/docs/6.x/use-navigation-state"}},a={},u=[{value:"Example",id:"example",level:2},{value:"Using with class component",id:"using-with-class-component",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"useRoute"})," is a hook which gives access to ",(0,o.jsx)(t.code,{children:"route"})," object. It's useful when you cannot pass the ",(0,o.jsx)(t.code,{children:"route"})," prop into the component directly, or don't want to pass it in case of a deeply nested child."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"useRoute()"})," returns the ",(0,o.jsx)(t.code,{children:"route"})," prop of the screen it's inside."]}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)("samp",{id:"use-route-example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"import * as React from 'react';\nimport { Text } from 'react-native';\nimport { useRoute } from '@react-navigation/native';\n\nfunction MyText() {\n  const route = useRoute();\n\n  return <Text>{route.params.caption}</Text>;\n}\n"})}),"\n",(0,o.jsxs)(t.p,{children:["See the documentation for the ",(0,o.jsxs)(t.a,{href:"/docs/6.x/route-prop",children:[(0,o.jsx)(t.code,{children:"route"})," prop"]})," for more info."]}),"\n",(0,o.jsx)(t.h2,{id:"using-with-class-component",children:"Using with class component"}),"\n",(0,o.jsx)(t.p,{children:"You can wrap your class component in a function component to use the hook:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"class MyText extends React.Component {\n  render() {\n    // Get it from props\n    const { route } = this.props;\n  }\n}\n\n// Wrap and export\nexport default function (props) {\n  const route = useRoute();\n\n  return <MyText {...props} route={route} />;\n}\n"})})]})}function p(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>i});var o=n(67294);const s={},r=o.createContext(s);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);