"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[39176],{16822:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>r,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var o=t(85893),i=t(11151);const a={id:"connecting-navigation-prop",title:"Access the navigation prop from any component",sidebar_label:"Access the navigation prop from any component"},c=void 0,s={id:"connecting-navigation-prop",title:"Access the navigation prop from any component",description:"useNavigation is a hook which gives access to the navigation object. It's useful when you cannot pass the navigation prop into the component directly, or don't want to pass it in case of a deeply nested child.",source:"@site/versioned_docs/version-6.x/connecting-navigation-prop.md",sourceDirName:".",slug:"/connecting-navigation-prop",permalink:"/docs/6.x/connecting-navigation-prop",draft:!1,unlisted:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-6.x/connecting-navigation-prop.md",tags:[],version:"6.x",frontMatter:{id:"connecting-navigation-prop",title:"Access the navigation prop from any component",sidebar_label:"Access the navigation prop from any component"},sidebar:"docs",previous:{title:"Call a function when focused screen changes",permalink:"/docs/6.x/function-after-focusing-screen"},next:{title:"Navigating without the navigation prop",permalink:"/docs/6.x/navigating-without-navigation-prop"}},r={},p=[];function d(n){const e={a:"a",code:"code",p:"p",pre:"pre",...(0,i.a)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.a,{href:"/docs/6.x/use-navigation",children:(0,o.jsx)(e.code,{children:"useNavigation"})})," is a hook which gives access to the ",(0,o.jsx)(e.code,{children:"navigation"})," object. It's useful when you cannot pass the ",(0,o.jsx)(e.code,{children:"navigation"})," prop into the component directly, or don't want to pass it in case of a deeply nested child."]}),"\n",(0,o.jsxs)(e.p,{children:["An ordinary component that is not a screen component will not receive the navigation prop automatically. For example in this ",(0,o.jsx)(e.code,{children:"GoToButton"})," component:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"import * as React from 'react';\nimport { Button } from 'react-native';\n\nfunction GoToButton({ navigation, screenName }) {\n  return (\n    <Button\n      title={`Go to ${screenName}`}\n      onPress={() => navigation.navigate(screenName)}\n    />\n  );\n}\n"})}),"\n",(0,o.jsxs)(e.p,{children:["To resolve this exception, you could pass the ",(0,o.jsx)(e.code,{children:"navigation"})," prop in to ",(0,o.jsx)(e.code,{children:"GoToButton"})," when you render it from a screen, like so: ",(0,o.jsx)(e.code,{children:"<GoToButton navigation={props.navigation} />"}),"."]}),"\n",(0,o.jsxs)(e.p,{children:["Alternatively, you can use the ",(0,o.jsx)(e.code,{children:"useNavigation"})," to provide the ",(0,o.jsx)(e.code,{children:"navigation"})," prop automatically (through React context, if you're curious)."]}),"\n",(0,o.jsx)("samp",{id:"navigation-in-component",children:"useNavigation in component"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-js",children:"import * as React from 'react';\nimport { Button } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nfunction GoToButton({ screenName }) {\n  const navigation = useNavigation();\n\n  return (\n    <Button\n      title={`Go to ${screenName}`}\n      onPress={() => navigation.navigate(screenName)}\n    />\n  );\n}\n"})}),"\n",(0,o.jsxs)(e.p,{children:["Using this approach, you can render ",(0,o.jsx)(e.code,{children:"GoToButton"})," anywhere in your app without passing in a ",(0,o.jsx)(e.code,{children:"navigation"})," prop explicitly and it will work as expected."]})]})}function l(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},11151:(n,e,t)=>{t.d(e,{Z:()=>s,a:()=>c});var o=t(67294);const i={},a=o.createContext(i);function c(n){const e=o.useContext(a);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:c(n.components),o.createElement(a.Provider,{value:e},n.children)}}}]);