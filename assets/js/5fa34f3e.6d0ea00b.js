"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([["78269"],{79341:function(e,t,n){n.r(t),n.d(t,{metadata:()=>o,contentTitle:()=>c,default:()=>l,assets:()=>a,toc:()=>u,frontMatter:()=>i});var o=JSON.parse('{"id":"use-theme","title":"useTheme","description":"The useTheme hook lets us access the currently active theme. You can use it in your own components to have them respond to changes in the theme.","source":"@site/versioned_docs/version-5.x/use-theme.md","sourceDirName":".","slug":"/use-theme","permalink":"/docs/5.x/use-theme","draft":false,"unlisted":false,"editUrl":"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-5.x/use-theme.md","tags":[],"version":"5.x","frontMatter":{"id":"use-theme","title":"useTheme","sidebar_label":"useTheme"},"sidebar":"docs","previous":{"title":"useScrollToTop","permalink":"/docs/5.x/use-scroll-to-top"},"next":{"title":"CommonActions","permalink":"/docs/5.x/navigation-actions"}}'),s=n("85893"),r=n("50065");let i={id:"use-theme",title:"useTheme",sidebar_label:"useTheme"},c=void 0,a={},u=[{value:"Using with class component",id:"using-with-class-component",level:2}];function h(e){let t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"useTheme"})," hook lets us access the currently active theme. You can use it in your own components to have them respond to changes in the theme."]}),"\n",(0,s.jsx)("samp",{id:"system-themes"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import * as React from 'react';\nimport { TouchableOpacity, Text } from 'react-native';\nimport { useTheme } from '@react-navigation/native';\n\n// Black background and white text in light theme, inverted on dark theme\nfunction MyButton() {\n  const { colors } = useTheme();\n\n  return (\n    <TouchableOpacity style={{ backgroundColor: colors.card }}>\n      <Text style={{ color: colors.text }}>Button!</Text>\n    </TouchableOpacity>\n  );\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["See ",(0,s.jsx)(t.a,{href:"/docs/5.x/themes",children:"theming guide"})," for more details and usage guide around how to configure themes."]}),"\n",(0,s.jsx)(t.h2,{id:"using-with-class-component",children:"Using with class component"}),"\n",(0,s.jsx)(t.p,{children:"You can wrap your class component in a function component to use the hook:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"class MyButton extends React.Component {\n  render() {\n    // Get it from props\n    const { theme } = this.props;\n  }\n}\n\n// Wrap and export\nexport default function (props) {\n  const theme = useTheme();\n\n  return <MyButton {...props} theme={theme} />;\n}\n"})})]})}function l(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return c},a:function(){return i}});var o=n(67294);let s={},r=o.createContext(s);function i(e){let t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);