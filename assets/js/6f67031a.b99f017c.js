"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([["22882"],{42767:function(e,t,n){n.r(t),n.d(t,{metadata:()=>a,contentTitle:()=>c,default:()=>g,assets:()=>s,toc:()=>l,frontMatter:()=>o});var a=JSON.parse('{"id":"screen-tracking","title":"Screen tracking for analytics","description":"This example shows how to do screen tracking and send to Google Analytics. The approach can be adapted to any other analytics SDK.","source":"@site/versioned_docs/version-4.x/screen-tracking.md","sourceDirName":".","slug":"/screen-tracking","permalink":"/docs/4.x/screen-tracking","draft":false,"unlisted":false,"editUrl":"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-4.x/screen-tracking.md","tags":[],"version":"4.x","frontMatter":{"id":"screen-tracking","title":"Screen tracking for analytics","sidebar_label":"Screen tracking for analytics"},"sidebar":"version-4.x-docs","previous":{"title":"Deep linking","permalink":"/docs/4.x/deep-linking"},"next":{"title":"Themes","permalink":"/docs/4.x/themes"}}'),r=n("85893"),i=n("50065");let o={id:"screen-tracking",title:"Screen tracking for analytics",sidebar_label:"Screen tracking for analytics"},c=void 0,s={},l=[{value:"Listening to State Changes",id:"listening-to-state-changes",level:2}];function u(e){let t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"This example shows how to do screen tracking and send to Google Analytics. The approach can be adapted to any other analytics SDK."}),"\n",(0,r.jsx)(t.h2,{id:"listening-to-state-changes",children:"Listening to State Changes"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"import { createAppContainer, createStackNavigator } from 'react-navigation';\nimport analytics from '@react-native-firebase/analytics';\n\n// gets the current screen from navigation state\nfunction getActiveRouteName(navigationState) {\n  if (!navigationState) {\n    return null;\n  }\n  const route = navigationState.routes[navigationState.index];\n  // dive into nested navigators\n  if (route.routes) {\n    return getActiveRouteName(route);\n  }\n  return route.routeName;\n}\n\nconst AppNavigator = createStackNavigator(AppRouteConfigs);\nconst AppContainer = createAppContainer(AppNavigator);\n\nexport default () => (\n  <AppContainer\n    onNavigationStateChange={async (prevState, currentState) => {\n      const currentRouteName = getActiveRouteName(currentState);\n      const previousRouteName = getActiveRouteName(prevState);\n\n      if (previousRouteName !== currentRouteName) {\n        // the line below uses the @react-native-firebase/analytics tracker\n        // change the tracker here to use other Mobile analytics SDK.\n        await analytics().logScreenView({\n          screen_name: currentRouteName,\n          screen_class: currentRouteName,\n        });\n      }\n    }}\n  />\n);\n"})})]})}function g(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return c},a:function(){return o}});var a=n(67294);let r={},i=a.createContext(r);function o(e){let t=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);