"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[95801],{72848:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>x,frontMatter:()=>l,metadata:()=>d,toc:()=>h});var t=i(85893),r=i(11151),s=i(74866),o=i(85162);const l={id:"native-stack-navigator",title:"Native Stack Navigator",sidebar_label:"Native Stack"},a=void 0,d={id:"native-stack-navigator",title:"Native Stack Navigator",description:"Native Stack Navigator provides a way for your app to transition between screens where each new screen is placed on top of a stack.",source:"@site/versioned_docs/version-6.x/native-stack-navigator.md",sourceDirName:".",slug:"/native-stack-navigator",permalink:"/docs/6.x/native-stack-navigator",draft:!1,unlisted:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-6.x/native-stack-navigator.md",tags:[],version:"6.x",frontMatter:{id:"native-stack-navigator",title:"Native Stack Navigator",sidebar_label:"Native Stack"},sidebar:"docs",previous:{title:"Stack",permalink:"/docs/6.x/stack-navigator"},next:{title:"Drawer",permalink:"/docs/6.x/drawer-navigator"}},c={},h=[{value:"Installation",id:"installation",level:2},{value:"API Definition",id:"api-definition",level:2},{value:"Props",id:"props",level:3},{value:"<code>id</code>",id:"id",level:4},{value:"<code>initialRouteName</code>",id:"initialroutename",level:4},{value:"<code>screenOptions</code>",id:"screenoptions",level:4},{value:"Options",id:"options",level:3},{value:"<code>title</code>",id:"title",level:4},{value:"<code>headerBackButtonMenuEnabled</code>",id:"headerbackbuttonmenuenabled",level:4},{value:"<code>headerBackVisible</code>",id:"headerbackvisible",level:4},{value:"<code>headerBackTitle</code>",id:"headerbacktitle",level:4},{value:"<code>headerBackTitleVisible</code>",id:"headerbacktitlevisible",level:4},{value:"<code>headerBackTitleStyle</code>",id:"headerbacktitlestyle",level:4},{value:"<code>headerBackImageSource</code>",id:"headerbackimagesource",level:4},{value:"<code>headerLargeStyle</code>",id:"headerlargestyle",level:4},{value:"<code>headerLargeTitle</code>",id:"headerlargetitle",level:4},{value:"<code>headerLargeTitleShadowVisible</code>",id:"headerlargetitleshadowvisible",level:4},{value:"<code>headerLargeTitleStyle</code>",id:"headerlargetitlestyle",level:4},{value:"<code>headerShown</code>",id:"headershown",level:4},{value:"<code>headerStyle</code>",id:"headerstyle",level:4},{value:"<code>headerShadowVisible</code>",id:"headershadowvisible",level:4},{value:"<code>headerTransparent</code>",id:"headertransparent",level:4},{value:"<code>headerBlurEffect</code>",id:"headerblureffect",level:4},{value:"<code>headerBackground</code>",id:"headerbackground",level:4},{value:"<code>headerTintColor</code>",id:"headertintcolor",level:4},{value:"<code>headerLeft</code>",id:"headerleft",level:4},{value:"<code>headerRight</code>",id:"headerright",level:4},{value:"<code>headerTitle</code>",id:"headertitle",level:4},{value:"<code>headerTitleAlign</code>",id:"headertitlealign",level:4},{value:"<code>headerTitleStyle</code>",id:"headertitlestyle",level:4},{value:"<code>headerSearchBarOptions</code>",id:"headersearchbaroptions",level:4},{value:"<code>autoCapitalize</code>",id:"autocapitalize",level:5},{value:"<code>autoFocus</code>",id:"autofocus",level:5},{value:"<code>barTintColor</code>",id:"bartintcolor",level:5},{value:"<code>tintColor</code>",id:"tintcolor",level:5},{value:"<code>cancelButtonText</code>",id:"cancelbuttontext",level:5},{value:"<code>disableBackButtonOverride</code>",id:"disablebackbuttonoverride",level:5},{value:"<code>hideNavigationBar</code>",id:"hidenavigationbar",level:5},{value:"<code>hideWhenScrolling</code>",id:"hidewhenscrolling",level:5},{value:"<code>inputType</code>",id:"inputtype",level:5},{value:"<code>obscureBackground</code>",id:"obscurebackground",level:5},{value:"<code>placeholder</code>",id:"placeholder",level:5},{value:"<code>textColor</code>",id:"textcolor",level:5},{value:"<code>hintTextColor</code>",id:"hinttextcolor",level:5},{value:"<code>headerIconColor</code>",id:"headericoncolor",level:5},{value:"<code>shouldShowHintSearchIcon</code>",id:"shouldshowhintsearchicon",level:5},{value:"<code>onBlur</code>",id:"onblur",level:5},{value:"<code>onCancelButtonPress</code>",id:"oncancelbuttonpress",level:5},{value:"<code>onChangeText</code>",id:"onchangetext",level:5},{value:"<code>header</code>",id:"header",level:4},{value:"<code>statusBarAnimation</code>",id:"statusbaranimation",level:4},{value:"<code>statusBarHidden</code>",id:"statusbarhidden",level:4},{value:"<code>statusBarStyle</code>",id:"statusbarstyle",level:4},{value:"<code>statusBarColor</code>",id:"statusbarcolor",level:4},{value:"<code>statusBarTranslucent</code>",id:"statusbartranslucent",level:4},{value:"<code>contentStyle</code>",id:"contentstyle",level:4},{value:"<code>customAnimationOnGesture</code>",id:"customanimationongesture",level:4},{value:"<code>fullScreenGestureEnabled</code>",id:"fullscreengestureenabled",level:4},{value:"<code>gestureEnabled</code>",id:"gestureenabled",level:4},{value:"<code>animationTypeForReplace</code>",id:"animationtypeforreplace",level:4},{value:"<code>animation</code>",id:"animation",level:4},{value:"<code>presentation</code>",id:"presentation",level:4},{value:"<code>orientation</code>",id:"orientation",level:4},{value:"<code>autoHideHomeIndicator</code>",id:"autohidehomeindicator",level:4},{value:"<code>gestureDirection</code>",id:"gesturedirection",level:4},{value:"<code>animationDuration</code>",id:"animationduration",level:4},{value:"<code>navigationBarColor</code>",id:"navigationbarcolor",level:4},{value:"<code>navigationBarHidden</code>",id:"navigationbarhidden",level:4},{value:"<code>freezeOnBlur</code>",id:"freezeonblur",level:4},{value:"Events",id:"events",level:3},{value:"<code>transitionStart</code>",id:"transitionstart",level:4},{value:"<code>transitionEnd</code>",id:"transitionend",level:4},{value:"Helpers",id:"helpers",level:3},{value:"<code>replace</code>",id:"replace",level:4},{value:"<code>push</code>",id:"push",level:4},{value:"<code>pop</code>",id:"pop",level:4},{value:"<code>popToTop</code>",id:"poptotop",level:4},{value:"Example",id:"example",level:2}];function u(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Native Stack Navigator provides a way for your app to transition between screens where each new screen is placed on top of a stack."}),"\n",(0,t.jsxs)(n.p,{children:["This navigator uses the native APIs ",(0,t.jsx)(n.code,{children:"UINavigationController"})," on iOS and ",(0,t.jsx)(n.code,{children:"Fragment"})," on Android so that navigation built with ",(0,t.jsx)(n.code,{children:"createNativeStackNavigator"})," will behave exactly the same and have the same performance characteristics as apps built natively on top of those APIs. It also offers basic Web support using ",(0,t.jsx)(n.a,{href:"https://github.com/necolas/react-native-web",children:(0,t.jsx)(n.code,{children:"react-native-web"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["One thing to keep in mind is that while ",(0,t.jsx)(n.code,{children:"@react-navigation/native-stack"})," offers native performance and exposes native features such as large title on iOS etc., it may not be as customizable as ",(0,t.jsx)(n.a,{href:"/docs/6.x/stack-navigator",children:(0,t.jsx)(n.code,{children:"@react-navigation/stack"})})," depending on your needs. So if you need more customization than what's possible in this navigator, consider using ",(0,t.jsx)(n.code,{children:"@react-navigation/stack"})," instead - which is a more customizable JavaScript based implementation."]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(n.p,{children:["To use this navigator, ensure that you have ",(0,t.jsxs)(n.a,{href:"/docs/6.x/getting-started",children:[(0,t.jsx)(n.code,{children:"@react-navigation/native"})," and its dependencies (follow this guide)"]}),", then install ",(0,t.jsx)(n.a,{href:"https://github.com/react-navigation/react-navigation/tree/main/packages/native-stack",children:(0,t.jsx)(n.code,{children:"@react-navigation/native-stack"})}),":"]}),"\n",(0,t.jsxs)(s.Z,{groupId:"npm2yarn",children:[(0,t.jsx)(o.Z,{value:"npm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install @react-navigation/native-stack@^6.x\n"})})}),(0,t.jsx)(o.Z,{value:"yarn",label:"Yarn",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"yarn add @react-navigation/native-stack@^6.x\n"})})}),(0,t.jsx)(o.Z,{value:"pnpm",label:"pnpm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pnpm add @react-navigation/native-stack@^6.x\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"api-definition",children:"API Definition"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\ud83d\udca1 If you encounter any bugs while using ",(0,t.jsx)(n.code,{children:"createNativeStackNavigator"}),", please open issues on ",(0,t.jsx)(n.a,{href:"https://github.com/software-mansion/react-native-screens",children:(0,t.jsx)(n.code,{children:"react-native-screens"})})," rather than the ",(0,t.jsx)(n.code,{children:"react-navigation"})," repository!"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["To use this navigator, import it from ",(0,t.jsx)(n.code,{children:"@react-navigation/native-stack"}),":"]}),"\n",(0,t.jsx)("samp",{id:"simple-native-stack"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import { createNativeStackNavigator } from \'@react-navigation/native-stack\';\n\nconst Stack = createNativeStackNavigator();\n\nfunction MyStack() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name="Home" component={Home} />\n      <Stack.Screen name="Notifications" component={Notifications} />\n      <Stack.Screen name="Profile" component={Profile} />\n      <Stack.Screen name="Settings" component={Settings} />\n    </Stack.Navigator>\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Stack.Navigator"})," component accepts following props:"]}),"\n",(0,t.jsx)(n.h4,{id:"id",children:(0,t.jsx)(n.code,{children:"id"})}),"\n",(0,t.jsxs)(n.p,{children:["Optional unique ID for the navigator. This can be used with ",(0,t.jsx)(n.a,{href:"/docs/6.x/navigation-prop#getparent",children:(0,t.jsx)(n.code,{children:"navigation.getParent"})})," to refer to this navigator in a child navigator."]}),"\n",(0,t.jsx)(n.h4,{id:"initialroutename",children:(0,t.jsx)(n.code,{children:"initialRouteName"})}),"\n",(0,t.jsx)(n.p,{children:"The name of the route to render on first load of the navigator."}),"\n",(0,t.jsx)(n.h4,{id:"screenoptions",children:(0,t.jsx)(n.code,{children:"screenOptions"})}),"\n",(0,t.jsx)(n.p,{children:"Default options to use for the screens in the navigator."}),"\n",(0,t.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,t.jsxs)(n.p,{children:["The following ",(0,t.jsx)(n.a,{href:"/docs/6.x/screen-options",children:"options"})," can be used to configure the screens in the navigator:"]}),"\n",(0,t.jsx)(n.h4,{id:"title",children:(0,t.jsx)(n.code,{children:"title"})}),"\n",(0,t.jsxs)(n.p,{children:["String that can be used as a fallback for ",(0,t.jsx)(n.code,{children:"headerTitle"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"headerbackbuttonmenuenabled",children:(0,t.jsx)(n.code,{children:"headerBackButtonMenuEnabled"})}),"\n",(0,t.jsxs)(n.p,{children:["Boolean indicating whether to show the menu on longPress of iOS >= 14 back button. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Requires ",(0,t.jsx)(n.code,{children:"react-native-screens"})," version >=3.3.0."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h4,{id:"headerbackvisible",children:(0,t.jsx)(n.code,{children:"headerBackVisible"})}),"\n",(0,t.jsxs)(n.p,{children:["Whether the back button is visible in the header. You can use it to show a back button alongside ",(0,t.jsx)(n.code,{children:"headerLeft"})," if you have specified it."]}),"\n",(0,t.jsx)(n.p,{children:"This will have no effect on the first screen in the stack."}),"\n",(0,t.jsx)(n.h4,{id:"headerbacktitle",children:(0,t.jsx)(n.code,{children:"headerBackTitle"})}),"\n",(0,t.jsxs)(n.p,{children:["Title string used by the back button on iOS. Defaults to the previous scene's title, or \"Back\" if there's not enough space. Use ",(0,t.jsx)(n.code,{children:"headerBackTitleVisible: false"})," to hide it."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h4,{id:"headerbacktitlevisible",children:(0,t.jsx)(n.code,{children:"headerBackTitleVisible"})}),"\n",(0,t.jsx)(n.p,{children:"Whether the back button title should be visible or not."}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h4,{id:"headerbacktitlestyle",children:(0,t.jsx)(n.code,{children:"headerBackTitleStyle"})}),"\n",(0,t.jsx)(n.p,{children:"Style object for header back title. Supported properties:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"fontFamily"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"fontSize"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h4,{id:"headerbackimagesource",children:(0,t.jsx)(n.code,{children:"headerBackImageSource"})}),"\n",(0,t.jsx)(n.p,{children:"Image to display in the header as the icon in the back button. Defaults to back icon image for the platform"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A chevron on iOS"}),"\n",(0,t.jsx)(n.li,{children:"An arrow on Android"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"headerlargestyle",children:(0,t.jsx)(n.code,{children:"headerLargeStyle"})}),"\n",(0,t.jsxs)(n.p,{children:["Style of the header when a large title is shown. The large title is shown if ",(0,t.jsx)(n.code,{children:"headerLargeTitle"})," is ",(0,t.jsx)(n.code,{children:"true"})," and the edge of any scrollable content reaches the matching edge of the header."]}),"\n",(0,t.jsx)(n.p,{children:"Supported properties:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"backgroundColor"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h4,{id:"headerlargetitle",children:(0,t.jsx)(n.code,{children:"headerLargeTitle"})}),"\n",(0,t.jsx)(n.p,{children:"Whether to enable header with large title which collapses to regular header on scroll."}),"\n",(0,t.jsxs)(n.p,{children:["For large title to collapse on scroll, the content of the screen should be wrapped in a scrollable view such as ",(0,t.jsx)(n.code,{children:"ScrollView"})," or ",(0,t.jsx)(n.code,{children:"FlatList"}),". If the scrollable area doesn't fill the screen, the large title won't collapse on scroll. You also need to specify ",(0,t.jsx)(n.code,{children:'contentInsetAdjustmentBehavior="automatic"'})," in your ",(0,t.jsx)(n.code,{children:"ScrollView"}),", ",(0,t.jsx)(n.code,{children:"FlatList"})," etc."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h4,{id:"headerlargetitleshadowvisible",children:(0,t.jsx)(n.code,{children:"headerLargeTitleShadowVisible"})}),"\n",(0,t.jsx)(n.p,{children:"Whether drop shadow of header is visible when a large title is shown."}),"\n",(0,t.jsx)(n.h4,{id:"headerlargetitlestyle",children:(0,t.jsx)(n.code,{children:"headerLargeTitleStyle"})}),"\n",(0,t.jsx)(n.p,{children:"Style object for large title in header. Supported properties:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"fontFamily"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"fontSize"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"fontWeight"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"color"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h4,{id:"headershown",children:(0,t.jsx)(n.code,{children:"headerShown"})}),"\n",(0,t.jsxs)(n.p,{children:["Whether to show the header. The header is shown by default. Setting this to ",(0,t.jsx)(n.code,{children:"false"})," hides the header."]}),"\n",(0,t.jsx)(n.h4,{id:"headerstyle",children:(0,t.jsx)(n.code,{children:"headerStyle"})}),"\n",(0,t.jsx)(n.p,{children:"Style object for header. Supported properties:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"backgroundColor"})}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"headershadowvisible",children:(0,t.jsx)(n.code,{children:"headerShadowVisible"})}),"\n",(0,t.jsx)(n.p,{children:"Whether to hide the elevation shadow (Android) or the bottom border (iOS) on the header."}),"\n",(0,t.jsx)(n.h4,{id:"headertransparent",children:(0,t.jsx)(n.code,{children:"headerTransparent"})}),"\n",(0,t.jsx)(n.p,{children:"Boolean indicating whether the navigation bar is translucent."}),"\n",(0,t.jsxs)(n.p,{children:["Defaults to ",(0,t.jsx)(n.code,{children:"false"}),". Setting this to ",(0,t.jsx)(n.code,{children:"true"})," makes the header absolutely positioned - so that the header floats over the screen so that it overlaps the content underneath, and changes the background color to ",(0,t.jsx)(n.code,{children:"transparent"})," unless specified in ",(0,t.jsx)(n.code,{children:"headerStyle"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"This is useful if you want to render a semi-transparent header or a blurred background."}),"\n",(0,t.jsx)(n.p,{children:"Note that if you don't want your content to appear under the header, you need to manually add a top margin to your content. React Navigation won't do it automatically."}),"\n",(0,t.jsxs)(n.p,{children:["To get the height of the header, you can use ",(0,t.jsx)(n.a,{href:"/docs/6.x/elements#headerheightcontext",children:(0,t.jsx)(n.code,{children:"HeaderHeightContext"})})," with ",(0,t.jsx)(n.a,{href:"https://react.dev/reference/react/useContext",children:"React's Context API"})," or ",(0,t.jsx)(n.a,{href:"/docs/6.x/elements#useheaderheight",children:(0,t.jsx)(n.code,{children:"useHeaderHeight"})}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"headerblureffect",children:(0,t.jsx)(n.code,{children:"headerBlurEffect"})}),"\n",(0,t.jsxs)(n.p,{children:["Blur effect for the translucent header. The ",(0,t.jsx)(n.code,{children:"headerTransparent"})," option needs to be set to ",(0,t.jsx)(n.code,{children:"true"})," for this to work."]}),"\n",(0,t.jsx)(n.p,{children:"Supported values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"extraLight"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"light"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"dark"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"regular"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"prominent"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemUltraThinMaterial"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemThinMaterial"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemMaterial"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemThickMaterial"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemChromeMaterial"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemUltraThinMaterialLight"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemThinMaterialLight"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemMaterialLight"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemThickMaterialLight"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemChromeMaterialLight"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemUltraThinMaterialDark"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemThinMaterialDark"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemMaterialDark"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemThickMaterialDark"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"systemChromeMaterialDark"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h4,{id:"headerbackground",children:(0,t.jsx)(n.code,{children:"headerBackground"})}),"\n",(0,t.jsx)(n.p,{children:"Function which returns a React Element to render as the background of the header. This is useful for using backgrounds such as an image or a gradient."}),"\n",(0,t.jsx)(n.h4,{id:"headertintcolor",children:(0,t.jsx)(n.code,{children:"headerTintColor"})}),"\n",(0,t.jsx)(n.p,{children:"Tint color for the header. Changes the color of back button and title."}),"\n",(0,t.jsx)(n.h4,{id:"headerleft",children:(0,t.jsx)(n.code,{children:"headerLeft"})}),"\n",(0,t.jsxs)(n.p,{children:["Function which returns a React Element to display on the left side of the header. This replaces the back button. See ",(0,t.jsx)(n.code,{children:"headerBackVisible"})," to show the back button along side left element."]}),"\n",(0,t.jsx)(n.h4,{id:"headerright",children:(0,t.jsx)(n.code,{children:"headerRight"})}),"\n",(0,t.jsx)(n.p,{children:"Function which returns a React Element to display on the right side of the header."}),"\n",(0,t.jsx)(n.h4,{id:"headertitle",children:(0,t.jsx)(n.code,{children:"headerTitle"})}),"\n",(0,t.jsxs)(n.p,{children:["String or a function that returns a React Element to be used by the header. Defaults to ",(0,t.jsx)(n.code,{children:"title"})," or name of the screen."]}),"\n",(0,t.jsxs)(n.p,{children:["When a function is passed, it receives ",(0,t.jsx)(n.code,{children:"tintColor"})," and",(0,t.jsx)(n.code,{children:"children"})," in the options object as an argument. The title string is passed in ",(0,t.jsx)(n.code,{children:"children"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Note that if you render a custom element by passing a function, animations for the title won't work."}),"\n",(0,t.jsx)(n.h4,{id:"headertitlealign",children:(0,t.jsx)(n.code,{children:"headerTitleAlign"})}),"\n",(0,t.jsx)(n.p,{children:"How to align the header title. Possible values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"left"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"center"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Defaults to ",(0,t.jsx)(n.code,{children:"left"})," on platforms other than iOS."]}),"\n",(0,t.jsxs)(n.p,{children:["Not supported on iOS. It's always ",(0,t.jsx)(n.code,{children:"center"})," on iOS and cannot be changed."]}),"\n",(0,t.jsx)(n.h4,{id:"headertitlestyle",children:(0,t.jsx)(n.code,{children:"headerTitleStyle"})}),"\n",(0,t.jsx)(n.p,{children:"Style object for header title. Supported properties:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"fontFamily"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"fontSize"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"fontWeight"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"color"})}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"headersearchbaroptions",children:(0,t.jsx)(n.code,{children:"headerSearchBarOptions"})}),"\n",(0,t.jsxs)(n.p,{children:["Options to render a native search bar on iOS. Search bars are rarely static so normally it is controlled by passing an object to ",(0,t.jsx)(n.code,{children:"headerSearchBarOptions"})," navigation option in the component's body. You also need to specify ",(0,t.jsx)(n.code,{children:'contentInsetAdjustmentBehavior="automatic"'})," in your ",(0,t.jsx)(n.code,{children:"ScrollView"}),", ",(0,t.jsx)(n.code,{children:"FlatList"})," etc. If you don't have a ",(0,t.jsx)(n.code,{children:"ScrollView"}),", specify ",(0,t.jsx)(n.code,{children:"headerTransparent: false"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS and Android."}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"React.useLayoutEffect(() => {\n  navigation.setOptions({\n    headerSearchBarOptions: {\n      // search bar options\n    },\n  });\n}, [navigation]);\n"})}),"\n",(0,t.jsx)(n.p,{children:"Supported properties are described below."}),"\n",(0,t.jsx)(n.h5,{id:"autocapitalize",children:(0,t.jsx)(n.code,{children:"autoCapitalize"})}),"\n",(0,t.jsx)(n.p,{children:"Controls whether the text is automatically auto-capitalized as it is entered by the user.\nPossible values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"none"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"words"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"sentences"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"characters"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Defaults to ",(0,t.jsx)(n.code,{children:"sentences"}),"."]}),"\n",(0,t.jsx)(n.h5,{id:"autofocus",children:(0,t.jsx)(n.code,{children:"autoFocus"})}),"\n",(0,t.jsxs)(n.p,{children:["Whether to automatically focus search bar when it's shown. Defaults to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android."}),"\n",(0,t.jsx)(n.h5,{id:"bartintcolor",children:(0,t.jsx)(n.code,{children:"barTintColor"})}),"\n",(0,t.jsx)(n.p,{children:"The search field background color. By default bar tint color is translucent."}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h5,{id:"tintcolor",children:(0,t.jsx)(n.code,{children:"tintColor"})}),"\n",(0,t.jsx)(n.p,{children:"The color for the cursor caret and cancel button text."}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h5,{id:"cancelbuttontext",children:(0,t.jsx)(n.code,{children:"cancelButtonText"})}),"\n",(0,t.jsxs)(n.p,{children:["The text to be used instead of default ",(0,t.jsx)(n.code,{children:"Cancel"})," button text."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h5,{id:"disablebackbuttonoverride",children:(0,t.jsx)(n.code,{children:"disableBackButtonOverride"})}),"\n",(0,t.jsxs)(n.p,{children:["Whether the back button should close search bar's text input or not. Defaults to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android."}),"\n",(0,t.jsx)(n.h5,{id:"hidenavigationbar",children:(0,t.jsx)(n.code,{children:"hideNavigationBar"})}),"\n",(0,t.jsxs)(n.p,{children:["Boolean indicating whether to hide the navigation bar during searching. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h5,{id:"hidewhenscrolling",children:(0,t.jsx)(n.code,{children:"hideWhenScrolling"})}),"\n",(0,t.jsxs)(n.p,{children:["Boolean indicating whether to hide the search bar when scrolling. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h5,{id:"inputtype",children:(0,t.jsx)(n.code,{children:"inputType"})}),"\n",(0,t.jsxs)(n.p,{children:["The type of the input. Defaults to ",(0,t.jsx)(n.code,{children:'"text"'}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Supported values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:'"text"'})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:'"phone"'})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:'"number"'})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:'"email"'})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android."}),"\n",(0,t.jsx)(n.h5,{id:"obscurebackground",children:(0,t.jsx)(n.code,{children:"obscureBackground"})}),"\n",(0,t.jsxs)(n.p,{children:["Boolean indicating whether to obscure the underlying content with semi-transparent overlay. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.h5,{id:"placeholder",children:(0,t.jsx)(n.code,{children:"placeholder"})}),"\n",(0,t.jsx)(n.p,{children:"Text displayed when search field is empty."}),"\n",(0,t.jsx)(n.h5,{id:"textcolor",children:(0,t.jsx)(n.code,{children:"textColor"})}),"\n",(0,t.jsx)(n.p,{children:"The color of the text in the search field."}),"\n",(0,t.jsx)(n.h5,{id:"hinttextcolor",children:(0,t.jsx)(n.code,{children:"hintTextColor"})}),"\n",(0,t.jsx)(n.p,{children:"The color of the hint text in the search field."}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android."}),"\n",(0,t.jsx)(n.h5,{id:"headericoncolor",children:(0,t.jsx)(n.code,{children:"headerIconColor"})}),"\n",(0,t.jsx)(n.p,{children:"The color of the search and close icons shown in the header"}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android."}),"\n",(0,t.jsx)(n.h5,{id:"shouldshowhintsearchicon",children:(0,t.jsx)(n.code,{children:"shouldShowHintSearchIcon"})}),"\n",(0,t.jsxs)(n.p,{children:["Whether to show the search hint icon when search bar is focused. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android."}),"\n",(0,t.jsx)(n.h5,{id:"onblur",children:(0,t.jsx)(n.code,{children:"onBlur"})}),"\n",(0,t.jsx)(n.p,{children:"A callback that gets called when search bar has lost focus."}),"\n",(0,t.jsx)(n.h5,{id:"oncancelbuttonpress",children:(0,t.jsx)(n.code,{children:"onCancelButtonPress"})}),"\n",(0,t.jsx)(n.p,{children:"A callback that gets called when the cancel button is pressed."}),"\n",(0,t.jsx)(n.h5,{id:"onchangetext",children:(0,t.jsx)(n.code,{children:"onChangeText"})}),"\n",(0,t.jsx)(n.p,{children:"A callback that gets called when the text changes. It receives the current text value of the search bar."}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const [search, setSearch] = React.useState('');\n\nReact.useLayoutEffect(() => {\n  navigation.setOptions({\n    headerSearchBarOptions: {\n      onChangeText: (event) => setSearch(event.nativeEvent.text),\n    },\n  });\n}, [navigation]);\n"})}),"\n",(0,t.jsx)(n.h4,{id:"header",children:(0,t.jsx)(n.code,{children:"header"})}),"\n",(0,t.jsx)(n.p,{children:"Custom header to use instead of the default header."}),"\n",(0,t.jsx)(n.p,{children:"This accepts a function that returns a React Element to display as a header. The function receives an object containing the following properties as the argument:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"navigation"})," - The navigation object for the current screen."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"route"})," - The route object for the current screen."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"})," - The options for the current screen"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"back"})," - Options for the back button, contains an object with a ",(0,t.jsx)(n.code,{children:"title"})," property to use for back button label."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { getHeaderTitle } from '@react-navigation/elements';\n\n// ..\n\nheader: ({ navigation, route, options, back }) => {\n  const title = getHeaderTitle(options, route.name);\n\n  return (\n    <MyHeader\n      title={title}\n      leftButton={\n        back ? <MyBackButton onPress={navigation.goBack} /> : undefined\n      }\n      style={options.headerStyle}\n    />\n  );\n};\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To set a custom header for all the screens in the navigator, you can specify this option in the ",(0,t.jsx)(n.code,{children:"screenOptions"})," prop of the navigator."]}),"\n",(0,t.jsx)(n.p,{children:"Note that if you specify a custom header, the native functionality such as large title, search bar etc. won't work."}),"\n",(0,t.jsx)(n.h4,{id:"statusbaranimation",children:(0,t.jsx)(n.code,{children:"statusBarAnimation"})}),"\n",(0,t.jsxs)(n.p,{children:["Sets the status bar animation (similar to the ",(0,t.jsx)(n.code,{children:"StatusBar"})," component). Defaults to ",(0,t.jsx)(n.code,{children:"fade"})," on iOS and ",(0,t.jsx)(n.code,{children:"none"})," on Android."]}),"\n",(0,t.jsx)(n.p,{children:"Supported values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:'"fade"'})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:'"none"'})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:'"slide"'})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["On Android, setting either ",(0,t.jsx)(n.code,{children:"fade"})," or ",(0,t.jsx)(n.code,{children:"slide"})," will set the transition of status bar color. On iOS, this option applies to appereance animation of the status bar."]}),"\n",(0,t.jsxs)(n.p,{children:["Requires setting ",(0,t.jsx)(n.code,{children:"View controller-based status bar appearance -> YES"})," (or removing the config) in your ",(0,t.jsx)(n.code,{children:"Info.plist"})," file."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android and iOS."}),"\n",(0,t.jsx)(n.h4,{id:"statusbarhidden",children:(0,t.jsx)(n.code,{children:"statusBarHidden"})}),"\n",(0,t.jsx)(n.p,{children:"Whether the status bar should be hidden on this screen."}),"\n",(0,t.jsxs)(n.p,{children:["Requires setting ",(0,t.jsx)(n.code,{children:"View controller-based status bar appearance -> YES"})," (or removing the config) in your ",(0,t.jsx)(n.code,{children:"Info.plist"})," file."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android and iOS."}),"\n",(0,t.jsx)(n.h4,{id:"statusbarstyle",children:(0,t.jsx)(n.code,{children:"statusBarStyle"})}),"\n",(0,t.jsxs)(n.p,{children:["Sets the status bar color (similar to the ",(0,t.jsx)(n.code,{children:"StatusBar"})," component). Defaults to ",(0,t.jsx)(n.code,{children:"auto"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Supported values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:'"auto"'})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"inverted"'})," (iOS only)"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:'"dark"'})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:'"light"'})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Requires setting ",(0,t.jsx)(n.code,{children:"View controller-based status bar appearance -> YES"})," (or removing the config) in your ",(0,t.jsx)(n.code,{children:"Info.plist"})," file."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android and iOS."}),"\n",(0,t.jsx)(n.h4,{id:"statusbarcolor",children:(0,t.jsx)(n.code,{children:"statusBarColor"})}),"\n",(0,t.jsxs)(n.p,{children:["Sets the status bar color (similar to the ",(0,t.jsx)(n.code,{children:"StatusBar"})," component). Defaults to initial status bar color."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android."}),"\n",(0,t.jsx)(n.h4,{id:"statusbartranslucent",children:(0,t.jsx)(n.code,{children:"statusBarTranslucent"})}),"\n",(0,t.jsxs)(n.p,{children:["Sets the translucency of the status bar (similar to the ",(0,t.jsx)(n.code,{children:"StatusBar"})," component). Defaults to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android."}),"\n",(0,t.jsx)(n.h4,{id:"contentstyle",children:(0,t.jsx)(n.code,{children:"contentStyle"})}),"\n",(0,t.jsx)(n.p,{children:"Style object for the scene content."}),"\n",(0,t.jsx)(n.h4,{id:"customanimationongesture",children:(0,t.jsx)(n.code,{children:"customAnimationOnGesture"})}),"\n",(0,t.jsxs)(n.p,{children:["Whether the gesture to dismiss should use animation provided to ",(0,t.jsx)(n.code,{children:"animation"})," prop. Defaults to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Doesn't affect the behavior of screens presented modally."}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h4,{id:"fullscreengestureenabled",children:(0,t.jsx)(n.code,{children:"fullScreenGestureEnabled"})}),"\n",(0,t.jsxs)(n.p,{children:["Whether the gesture to dismiss should work on the whole screen. Using gesture to dismiss with this option results in the same transition animation as ",(0,t.jsx)(n.code,{children:"simple_push"}),". This behavior can be changed by setting ",(0,t.jsx)(n.code,{children:"customAnimationOnGesture"})," prop. Achieving the default iOS animation isn't possible due to platform limitations. Defaults to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Doesn't affect the behavior of screens presented modally."}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h4,{id:"gestureenabled",children:(0,t.jsx)(n.code,{children:"gestureEnabled"})}),"\n",(0,t.jsxs)(n.p,{children:["Whether you can use gestures to dismiss this screen. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),". Only supported on iOS."]}),"\n",(0,t.jsx)(n.h4,{id:"animationtypeforreplace",children:(0,t.jsx)(n.code,{children:"animationTypeForReplace"})}),"\n",(0,t.jsxs)(n.p,{children:["The type of animation to use when this screen replaces another screen. Defaults to ",(0,t.jsx)(n.code,{children:"pop"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Supported values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"push"}),": the new screen will perform push animation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"pop"}),": the new screen will perform pop animation."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"animation",children:(0,t.jsx)(n.code,{children:"animation"})}),"\n",(0,t.jsx)(n.p,{children:"How the screen should animate when pushed or popped."}),"\n",(0,t.jsx)(n.p,{children:"Supported values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"default"}),": use the platform default animation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fade"}),": fade screen in or out"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fade_from_bottom"}),": fade the new screen from bottom"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"flip"}),": flip the screen, requires ",(0,t.jsx)(n.code,{children:'presentation: "modal"'})," (iOS only)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"simple_push"}),": default animation, but without shadow and native header transition (iOS only, uses default animation on Android)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"slide_from_bottom"}),": slide in the new screen from bottom"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"slide_from_right"}),": slide in the new screen from right (Android only, uses default animation on iOS)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"slide_from_left"}),": slide in the new screen from left (Android only, uses default animation on iOS)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"none"}),": don't animate the screen"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android and iOS."}),"\n",(0,t.jsx)(n.h4,{id:"presentation",children:(0,t.jsx)(n.code,{children:"presentation"})}),"\n",(0,t.jsx)(n.p,{children:"How should the screen be presented."}),"\n",(0,t.jsx)(n.p,{children:"Supported values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"card"}),": the new screen will be pushed onto a stack, which means the default animation will be slide from the side on iOS, the animation on Android will vary depending on the OS version and theme."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"modal"}),": the new screen will be presented modally. this also allows for a nested stack to be rendered inside the screen."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"transparentModal"}),": the new screen will be presented modally, but in addition, the previous screen will stay so that the content below can still be seen if the screen has translucent background."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"containedModal"}),': will use "UIModalPresentationCurrentContext" modal style on iOS and will fallback to "modal" on Android.']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"containedTransparentModal"}),': will use "UIModalPresentationOverCurrentContext" modal style on iOS and will fallback to "transparentModal" on Android.']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fullScreenModal"}),': will use "UIModalPresentationFullScreen" modal style on iOS and will fallback to "modal" on Android. A screen using this presentation style can\'t be dismissed by gesture.']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"formSheet"}),': will use "UIModalPresentationFormSheet" modal style on iOS and will fallback to "modal" on Android.']}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android and iOS."}),"\n",(0,t.jsx)(n.h4,{id:"orientation",children:(0,t.jsx)(n.code,{children:"orientation"})}),"\n",(0,t.jsx)(n.p,{children:"The display orientation to use for the screen."}),"\n",(0,t.jsx)(n.p,{children:"Supported values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"default"}),' - resolves to "all" without "portrait_down" on iOS. On Android, this lets the system decide the best orientation.']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"all"}),": all orientations are permitted."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"portrait"}),": portrait orientations are permitted."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"portrait_up"}),": right-side portrait orientation is permitted."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"portrait_down"}),": upside-down portrait orientation is permitted."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"landscape"}),": landscape orientations are permitted."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"landscape_left"}),": landscape-left orientation is permitted."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"landscape_right"}),": landscape-right orientation is permitted."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android and iOS."}),"\n",(0,t.jsx)(n.h4,{id:"autohidehomeindicator",children:(0,t.jsx)(n.code,{children:"autoHideHomeIndicator"})}),"\n",(0,t.jsxs)(n.p,{children:["Boolean indicating whether the home indicator should prefer to stay hidden. Defaults to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h4,{id:"gesturedirection",children:(0,t.jsx)(n.code,{children:"gestureDirection"})}),"\n",(0,t.jsx)(n.p,{children:"Sets the direction in which you should swipe to dismiss the screen."}),"\n",(0,t.jsx)(n.p,{children:"Supported values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"vertical"})," \u2013 dismiss screen vertically"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"horizontal"})," \u2013 dismiss screen horizontally (default)"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["When using ",(0,t.jsx)(n.code,{children:"vertical"})," option, options ",(0,t.jsx)(n.code,{children:"fullScreenGestureEnabled: true"}),", ",(0,t.jsx)(n.code,{children:"customAnimationOnGesture: true"})," and ",(0,t.jsx)(n.code,{children:"animation: 'slide_from_bottom'"})," are set by default."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h4,{id:"animationduration",children:(0,t.jsx)(n.code,{children:"animationDuration"})}),"\n",(0,t.jsxs)(n.p,{children:["Changes the duration (in milliseconds) of ",(0,t.jsx)(n.code,{children:"slide_from_bottom"}),", ",(0,t.jsx)(n.code,{children:"fade_from_bottom"}),", ",(0,t.jsx)(n.code,{children:"fade"})," and ",(0,t.jsx)(n.code,{children:"simple_push"})," transitions on iOS. Defaults to ",(0,t.jsx)(n.code,{children:"350"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The duration of ",(0,t.jsx)(n.code,{children:"default"})," and ",(0,t.jsx)(n.code,{children:"flip"})," transitions isn't customizable."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS."}),"\n",(0,t.jsx)(n.h4,{id:"navigationbarcolor",children:(0,t.jsx)(n.code,{children:"navigationBarColor"})}),"\n",(0,t.jsx)(n.p,{children:"Sets the navigation bar color. Defaults to initial status bar color."}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android."}),"\n",(0,t.jsx)(n.h4,{id:"navigationbarhidden",children:(0,t.jsx)(n.code,{children:"navigationBarHidden"})}),"\n",(0,t.jsxs)(n.p,{children:["Boolean indicating whether the navigation bar should be hidden. Defaults to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on Android."}),"\n",(0,t.jsx)(n.h4,{id:"freezeonblur",children:(0,t.jsx)(n.code,{children:"freezeOnBlur"})}),"\n",(0,t.jsxs)(n.p,{children:["Boolean indicating whether to prevent inactive screens from re-rendering. Defaults to ",(0,t.jsx)(n.code,{children:"false"}),".\nDefaults to ",(0,t.jsx)(n.code,{children:"true"})," when ",(0,t.jsx)(n.code,{children:"enableFreeze()"})," from ",(0,t.jsx)(n.code,{children:"react-native-screens"})," package is run at the top of the application."]}),"\n",(0,t.jsxs)(n.p,{children:["Requires ",(0,t.jsx)(n.code,{children:"react-native-screens"})," version >=3.16.0."]}),"\n",(0,t.jsx)(n.p,{children:"Only supported on iOS and Android."}),"\n",(0,t.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,t.jsxs)(n.p,{children:["The navigator can ",(0,t.jsx)(n.a,{href:"/docs/6.x/navigation-events",children:"emit events"})," on certain actions. Supported events are:"]}),"\n",(0,t.jsx)(n.h4,{id:"transitionstart",children:(0,t.jsx)(n.code,{children:"transitionStart"})}),"\n",(0,t.jsx)(n.p,{children:"This event is fired when the transition animation starts for the current screen."}),"\n",(0,t.jsx)(n.p,{children:"Event data:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"e.data.closing"})," - Boolean indicating whether the screen is being opened or closed."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"React.useEffect(() => {\n  const unsubscribe = navigation.addListener('transitionStart', (e) => {\n    // Do something\n  });\n\n  return unsubscribe;\n}, [navigation]);\n"})}),"\n",(0,t.jsx)(n.h4,{id:"transitionend",children:(0,t.jsx)(n.code,{children:"transitionEnd"})}),"\n",(0,t.jsx)(n.p,{children:"This event is fired when the transition animation ends for the current screen."}),"\n",(0,t.jsx)(n.p,{children:"Event data:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"e.data.closing"})," - Boolean indicating whether the screen was opened or closed."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"React.useEffect(() => {\n  const unsubscribe = navigation.addListener('transitionEnd', (e) => {\n    // Do something\n  });\n\n  return unsubscribe;\n}, [navigation]);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"helpers",children:"Helpers"}),"\n",(0,t.jsx)(n.p,{children:"The native stack navigator adds the following methods to the navigation prop:"}),"\n",(0,t.jsx)(n.h4,{id:"replace",children:(0,t.jsx)(n.code,{children:"replace"})}),"\n",(0,t.jsx)(n.p,{children:"Replaces the current screen with a new screen in the stack. The method accepts following arguments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"})," - ",(0,t.jsx)(n.em,{children:"string"})," - Name of the route to push onto the stack."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"params"})," - ",(0,t.jsx)(n.em,{children:"object"})," - Screen params to pass to the destination route."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"navigation.replace('Profile', { owner: 'Micha\u015b' });\n"})}),"\n",(0,t.jsx)(n.h4,{id:"push",children:(0,t.jsx)(n.code,{children:"push"})}),"\n",(0,t.jsx)(n.p,{children:"Pushes a new screen to top of the stack and navigate to it. The method accepts following arguments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"})," - ",(0,t.jsx)(n.em,{children:"string"})," - Name of the route to push onto the stack."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"params"})," - ",(0,t.jsx)(n.em,{children:"object"})," - Screen params to pass to the destination route."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"navigation.push('Profile', { owner: 'Micha\u015b' });\n"})}),"\n",(0,t.jsx)(n.h4,{id:"pop",children:(0,t.jsx)(n.code,{children:"pop"})}),"\n",(0,t.jsxs)(n.p,{children:["Pops the current screen from the stack and navigates back to the previous screen. It takes one optional argument (",(0,t.jsx)(n.code,{children:"count"}),"), which allows you to specify how many screens to pop back by."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"navigation.pop();\n"})}),"\n",(0,t.jsx)(n.h4,{id:"poptotop",children:(0,t.jsx)(n.code,{children:"popToTop"})}),"\n",(0,t.jsx)(n.p,{children:"Pops all of the screens in the stack except the first one and navigates to it."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"navigation.popToTop();\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"import { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nconst Stack = createNativeStackNavigator();\n\nfunction MyStack() {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"Home\"\n      screenOptions={{\n        headerTintColor: 'white',\n        headerStyle: { backgroundColor: 'tomato' },\n      }}\n    >\n      <Stack.Screen\n        name=\"Home\"\n        component={Home}\n        options={{\n          title: 'Awesome app',\n        }}\n      />\n      <Stack.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{\n          title: 'My profile',\n        }}\n      />\n      <Stack.Screen\n        name=\"Settings\"\n        component={Settings}\n        options={{\n          gestureEnabled: false,\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n"})})]})}function x(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},85162:(e,n,i)=>{i.d(n,{Z:()=>o});i(67294);var t=i(86010);const r={tabItem:"tabItem_Ymn6"};var s=i(85893);function o(e){let{children:n,hidden:i,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.Z)(r.tabItem,o),hidden:i,children:n})}},74866:(e,n,i)=>{i.d(n,{Z:()=>S});var t=i(67294),r=i(86010),s=i(12466),o=i(16550),l=i(20469),a=i(91980),d=i(67392),c=i(50012);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:i}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:i,attributes:t,default:r}}=e;return{value:n,label:i,attributes:t,default:r}}))}(i);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,i])}function x(e){let{value:n,tabValues:i}=e;return i.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:i}=e;const r=(0,o.k6)(),s=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,a._X)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function j(e){const{defaultValue:n,queryString:i=!1,groupId:r}=e,s=u(e),[o,a]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!x({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=i.find((e=>e.default))??i[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[d,h]=p({queryString:i,groupId:r}),[j,v]=function(e){let{groupId:n}=e;const i=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,c.Nk)(i);return[r,(0,t.useCallback)((e=>{i&&s.set(e)}),[i,s])]}({groupId:r}),f=(()=>{const e=d??j;return x({value:e,tabValues:s})?e:null})();(0,l.Z)((()=>{f&&a(f)}),[f]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!x({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);a(e),h(e),v(e)}),[h,v,s]),tabValues:s}}var v=i(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=i(85893);function g(e){let{className:n,block:i,selectedValue:t,selectValue:o,tabValues:l}=e;const a=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),c=e=>{const n=e.currentTarget,i=a.indexOf(n),r=l[i].value;r!==t&&(d(n),o(r))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const i=a.indexOf(e.currentTarget)+1;n=a[i]??a[0];break}case"ArrowLeft":{const i=a.indexOf(e.currentTarget)-1;n=a[i]??a[a.length-1];break}}n?.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":i},n),children:l.map((e=>{let{value:n,label:i,attributes:s}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>a.push(e),onKeyDown:h,onClick:c,...s,className:(0,r.Z)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":t===n}),children:i??n},n)}))})}function b(e){let{lazy:n,children:i,selectedValue:r}=e;const s=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=j(e);return(0,m.jsxs)("div",{className:(0,r.Z)("tabs-container",f.tabList),children:[(0,m.jsx)(g,{...e,...n}),(0,m.jsx)(b,{...e,...n})]})}function S(e){const n=(0,v.Z)();return(0,m.jsx)(y,{...e,children:h(e.children)},String(n))}},11151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>o});var t=i(67294);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);