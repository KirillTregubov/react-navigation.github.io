"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[82806],{36865:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>b,frontMatter:()=>s,metadata:()=>c,toc:()=>h});var n=a(85893),r=a(11151),i=a(74866),o=a(85162);const s={id:"material-bottom-tab-navigator",title:"createMaterialBottomTabNavigator",sidebar_label:"createMaterialBottomTabNavigator"},l=void 0,c={id:"material-bottom-tab-navigator",title:"createMaterialBottomTabNavigator",description:"A material-design themed tab bar on the bottom of the screen that lets you switch between different routes. Routes are lazily initialized -- their screen components are not mounted until they are first focused.",source:"@site/versioned_docs/version-3.x/material-bottom-tab-navigator.md",sourceDirName:".",slug:"/material-bottom-tab-navigator",permalink:"/docs/3.x/material-bottom-tab-navigator",draft:!1,unlisted:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-3.x/material-bottom-tab-navigator.md",tags:[],version:"3.x",frontMatter:{id:"material-bottom-tab-navigator",title:"createMaterialBottomTabNavigator",sidebar_label:"createMaterialBottomTabNavigator"},sidebar:"version-3.x-docs",previous:{title:"createBottomTabNavigator",permalink:"/docs/3.x/bottom-tab-navigator"},next:{title:"createMaterialTopTabNavigator",permalink:"/docs/3.x/material-top-tab-navigator"}},d={},h=[{value:"RouteConfigs",id:"routeconfigs",level:2},{value:"MaterialBottomTabNavigatorConfig",id:"materialbottomtabnavigatorconfig",level:2},{value:"<code>navigationOptions</code> for screens inside of the navigator",id:"navigationoptions-for-screens-inside-of-the-navigator",level:2},{value:"<code>title</code>",id:"title",level:4},{value:"<code>tabBarIcon</code>",id:"tabbaricon",level:4},{value:"<code>tabBarColor</code>",id:"tabbarcolor",level:4},{value:"<code>tabBarLabel</code>",id:"tabbarlabel",level:4},{value:"<code>tabBarAccessibilityLabel</code>",id:"tabbaraccessibilitylabel",level:4},{value:"<code>tabBarTestID</code>",id:"tabbartestid",level:4},{value:"<code>tabBarOnPress</code>",id:"tabbaronpress",level:4},{value:"Using with <code>react-native-paper</code> (optional)",id:"using-with-react-native-paper-optional",level:2}];function u(e){const t={a:"a",code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"A material-design themed tab bar on the bottom of the screen that lets you switch between different routes. Routes are lazily initialized -- their screen components are not mounted until they are first focused."}),"\n",(0,n.jsx)("img",{src:"/assets/navigators/bottom-navigation.gif",style:{width:"420px",maxWidth:"100%"}}),"\n",(0,n.jsxs)(t.p,{children:["To use this navigator, you need to install ",(0,n.jsx)(t.code,{children:"react-navigation-material-bottom-tabs"})]}),"\n",(0,n.jsxs)(i.Z,{groupId:"npm2yarn",children:[(0,n.jsx)(o.Z,{value:"npm",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"npm install react-navigation-material-bottom-tabs react-native-paper\n"})})}),(0,n.jsx)(o.Z,{value:"yarn",label:"Yarn",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"yarn add react-navigation-material-bottom-tabs react-native-paper\n"})})}),(0,n.jsx)(o.Z,{value:"pnpm",label:"pnpm",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"pnpm add react-navigation-material-bottom-tabs react-native-paper\n"})})})]}),"\n",(0,n.jsxs)(t.p,{children:["This API also requires that you install ",(0,n.jsx)(t.code,{children:"react-native-vector-icons"}),"! If you are using Expo, it will just work out of the box. Otherwise, ",(0,n.jsx)(t.a,{href:"https://github.com/oblador/react-native-vector-icons#installation",children:"follow these installation instructions"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["To use this tab navigator, import it from ",(0,n.jsx)(t.code,{children:"react-navigation-material-bottom-tabs"})]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"import { createMaterialBottomTabNavigator } from 'react-navigation-material-bottom-tabs';\n\ncreateMaterialBottomTabNavigator(\n  RouteConfigs,\n  MaterialBottomTabNavigatorConfig\n);\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This library uses the ",(0,n.jsxs)(t.a,{href:"https://callstack.github.io/react-native-paper/bottom-navigation.html",children:[(0,n.jsx)(t.code,{children:"BottomNavigation"})," component from ",(0,n.jsx)(t.code,{children:"react-native-paper"})]}),". It doesn't include the whole ",(0,n.jsx)(t.code,{children:"react-native-paper"})," library in your bundle, so you don't need to worry about it."]}),"\n",(0,n.jsx)(t.h2,{id:"routeconfigs",children:"RouteConfigs"}),"\n",(0,n.jsx)(t.p,{children:"The route configs object is a mapping from route name to a route config."}),"\n",(0,n.jsx)(t.h2,{id:"materialbottomtabnavigatorconfig",children:"MaterialBottomTabNavigatorConfig"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"shifting"})," - Whether the shifting style is used, the active tab appears wider and the inactive tabs won't have a label. By default, this is ",(0,n.jsx)(t.code,{children:"true"})," when you have more than 3 tabs."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"labeled"})," - Whether to show labels in tabs. When ",(0,n.jsx)(t.code,{children:"false"}),", only icons will be displayed."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"activeColor"})," - Custom color for icon and label in the active tab."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"inactiveColor"})," - Custom color for icon and label in the inactive tab."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"barStyle"})," - Style for the bottom navigation bar. You can set a bottom padding here if you have a translucent navigation bar on Android: ",(0,n.jsx)(t.code,{children:"barStyle={{ paddingBottom: 48 }}"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"initialRouteName"})," - The routeName for the initial tab route when first loading."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"order"})," - Array of routeNames which defines the order of the tabs."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"paths"})," - Provide a mapping of routeName to path config, which overrides the paths set in the routeConfigs."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"backBehavior"})," - ",(0,n.jsx)(t.code,{children:"initialRoute"})," to return to initial tab, ",(0,n.jsx)(t.code,{children:"order"})," to return to previous tab, ",(0,n.jsx)(t.code,{children:"history"})," to return to last visited tab, or ",(0,n.jsx)(t.code,{children:"none"}),"."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Example:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"export default createMaterialBottomTabNavigator(\n  {\n    Album: { screen: Album },\n    Library: { screen: Library },\n    History: { screen: History },\n    Cart: { screen: Cart },\n  },\n  {\n    initialRouteName: 'Album',\n    activeColor: '#f0edf6',\n    inactiveColor: '#3e2465',\n    barStyle: { backgroundColor: '#694fad' },\n  }\n);\n"})}),"\n",(0,n.jsxs)(t.h2,{id:"navigationoptions-for-screens-inside-of-the-navigator",children:[(0,n.jsx)(t.code,{children:"navigationOptions"})," for screens inside of the navigator"]}),"\n",(0,n.jsx)(t.h4,{id:"title",children:(0,n.jsx)(t.code,{children:"title"})}),"\n",(0,n.jsxs)(t.p,{children:["Generic title that can be used as a fallback for ",(0,n.jsx)(t.code,{children:"headerTitle"})," and ",(0,n.jsx)(t.code,{children:"tabBarLabel"}),"."]}),"\n",(0,n.jsx)(t.h4,{id:"tabbaricon",children:(0,n.jsx)(t.code,{children:"tabBarIcon"})}),"\n",(0,n.jsxs)(t.p,{children:["React Element or a function that given ",(0,n.jsx)(t.code,{children:"{ focused: boolean, horizontal: boolean, tintColor: string }"})," returns a React.Node, to display in the tab bar. ",(0,n.jsx)(t.code,{children:"horizontal"})," is ",(0,n.jsx)(t.code,{children:"true"})," when the device is in landscape and ",(0,n.jsx)(t.code,{children:"false"})," when portrait. The icon is re-rendered whenever the device orientation changes."]}),"\n",(0,n.jsx)(t.h4,{id:"tabbarcolor",children:(0,n.jsx)(t.code,{children:"tabBarColor"})}),"\n",(0,n.jsxs)(t.p,{children:["Color for the tab bar when the tab corresponding to the screen is active. Used for the ripple effect. This is only supported when ",(0,n.jsx)(t.code,{children:"shifting"})," is ",(0,n.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,n.jsx)(t.h4,{id:"tabbarlabel",children:(0,n.jsx)(t.code,{children:"tabBarLabel"})}),"\n",(0,n.jsxs)(t.p,{children:["Title string of a tab displayed in the tab bar. When undefined, scene ",(0,n.jsx)(t.code,{children:"title"})," is used. To hide, see ",(0,n.jsx)(t.code,{children:"labeled"})," option in the previous section."]}),"\n",(0,n.jsx)(t.h4,{id:"tabbaraccessibilitylabel",children:(0,n.jsx)(t.code,{children:"tabBarAccessibilityLabel"})}),"\n",(0,n.jsx)(t.p,{children:"Accessibility label for the tab button. This is read by the screen reader when the user taps the tab. It's recommended to set this if you don't have a label for the tab."}),"\n",(0,n.jsx)(t.h4,{id:"tabbartestid",children:(0,n.jsx)(t.code,{children:"tabBarTestID"})}),"\n",(0,n.jsx)(t.p,{children:"ID to locate this tab button in tests."}),"\n",(0,n.jsx)(t.h4,{id:"tabbaronpress",children:(0,n.jsx)(t.code,{children:"tabBarOnPress"})}),"\n",(0,n.jsx)(t.p,{children:"Callback to handle press events; the argument is an object containing:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"navigation"}),": navigation prop for the screen"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"defaultHandler"}),": the default handler for tab press"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Useful for adding a custom logic before the transition to the next scene (the tapped one) starts."}),"\n",(0,n.jsxs)(t.h2,{id:"using-with-react-native-paper-optional",children:["Using with ",(0,n.jsx)(t.code,{children:"react-native-paper"})," (optional)"]}),"\n",(0,n.jsxs)(t.p,{children:["You can use the theming support in ",(0,n.jsx)(t.code,{children:"react-native-paper"})," to customize the material bottom navigation by wrapping your app in ",(0,n.jsxs)(t.a,{href:"https://callstack.github.io/react-native-paper/getting-started.html",children:[(0,n.jsx)(t.code,{children:"Provider"})," from ",(0,n.jsx)(t.code,{children:"react-native-paper"})]}),". A common use case for this can be to customize the background color for the screens when your app has a dark theme. Follow the ",(0,n.jsxs)(t.a,{href:"https://callstack.github.io/react-native-paper/theming.html",children:["instructions on ",(0,n.jsx)(t.code,{children:"react-native-paper"}),"'s documentation"]})," to learn how to customize the theme."]})]})}function b(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},85162:(e,t,a)=>{a.d(t,{Z:()=>o});a(67294);var n=a(86010);const r={tabItem:"tabItem_Ymn6"};var i=a(85893);function o(e){let{children:t,hidden:a,className:o}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,n.Z)(r.tabItem,o),hidden:a,children:t})}},74866:(e,t,a)=>{a.d(t,{Z:()=>w});var n=a(67294),r=a(86010),i=a(12466),o=a(16550),s=a(20469),l=a(91980),c=a(67392),d=a(50012);function h(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function b(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:a}=e;const r=(0,o.k6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,l._X)(i),(0,n.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(r.location.search);t.set(i,e),r.replace({...r.location,search:t.toString()})}),[i,r])]}function m(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,i=u(e),[o,l]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!b({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i}))),[c,h]=p({queryString:a,groupId:r}),[m,v]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,i]=(0,d.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:r}),f=(()=>{const e=c??m;return b({value:e,tabValues:i})?e:null})();(0,s.Z)((()=>{f&&l(f)}),[f]);return{selectedValue:o,selectValue:(0,n.useCallback)((e=>{if(!b({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),v(e)}),[h,v,i]),tabValues:i}}var v=a(72389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=a(85893);function x(e){let{className:t,block:a,selectedValue:n,selectValue:o,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),d=e=>{const t=e.currentTarget,a=l.indexOf(t),r=s[a].value;r!==n&&(c(t),o(r))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=l.indexOf(e.currentTarget)+1;t=l[a]??l[0];break}case"ArrowLeft":{const a=l.indexOf(e.currentTarget)-1;t=l[a]??l[l.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},t),children:s.map((e=>{let{value:t,label:a,attributes:i}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>l.push(e),onKeyDown:h,onClick:d,...i,className:(0,r.Z)("tabs__item",f.tabItem,i?.className,{"tabs__item--active":n===t}),children:a??t},t)}))})}function j(e){let{lazy:t,children:a,selectedValue:r}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function y(e){const t=m(e);return(0,g.jsxs)("div",{className:(0,r.Z)("tabs-container",f.tabList),children:[(0,g.jsx)(x,{...e,...t}),(0,g.jsx)(j,{...e,...t})]})}function w(e){const t=(0,v.Z)();return(0,g.jsx)(y,{...e,children:h(e.children)},String(t))}},11151:(e,t,a)=>{a.d(t,{Z:()=>s,a:()=>o});var n=a(67294);const r={},i=n.createContext(r);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);