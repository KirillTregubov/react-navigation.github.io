"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([["94641"],{62539:function(e,t,a){a.r(t),a.d(t,{metadata:()=>n,contentTitle:()=>i,default:()=>h,assets:()=>c,toc:()=>l,frontMatter:()=>o});var n=JSON.parse('{"id":"params","title":"Passing parameters to routes","description":"Now that we know how to create a StackNavigator with some routes and navigate between those routes, let\'s look at how we can pass data to routes when we navigate to them.","source":"@site/versioned_docs/version-1.x/params.md","sourceDirName":".","slug":"/params","permalink":"/docs/1.x/params","draft":false,"unlisted":false,"editUrl":"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-1.x/params.md","tags":[],"version":"1.x","frontMatter":{"id":"params","title":"Passing parameters to routes","sidebar_label":"Passing parameters to routes"},"sidebar":"docs","previous":{"title":"Moving between screens","permalink":"/docs/1.x/navigating"},"next":{"title":"Configuring the header bar","permalink":"/docs/1.x/headers"}}'),s=a("85893"),r=a("50065");let o={id:"params",title:"Passing parameters to routes",sidebar_label:"Passing parameters to routes"},i=void 0,c={},l=[{value:"Summary",id:"summary",level:2}];function p(e){let t={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Now that we know how to ",(0,s.jsx)(t.a,{href:"/docs/1.x/hello-react-navigation",children:"create a StackNavigator with some routes"})," and ",(0,s.jsx)(t.a,{href:"/docs/1.x/navigating",children:"navigate between those routes"}),", let's look at how we can pass data to routes when we navigate to them."]}),"\n",(0,s.jsx)(t.p,{children:"There are two pieces to this:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Pass params to a route by putting them in an object as a second parameter to the ",(0,s.jsx)(t.code,{children:"navigation.navigate"})," function: ",(0,s.jsx)(t.code,{children:"this.props.navigation.navigate('RouteName', { /* params go here */ })"})]}),"\n",(0,s.jsxs)(t.li,{children:["Read the params in your screen component: ",(0,s.jsx)(t.code,{children:"this.props.navigation.state.params"}),". Alternatively, if you want to access the params directly (eg. through ",(0,s.jsx)(t.code,{children:"this.props.itemId"}),"), you may use a community-developed ",(0,s.jsx)(t.a,{href:"https://github.com/vonovak/react-navigation-props-mapper",children:"react-navigation-props-mapper"})," package."]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"class HomeScreen extends React.Component {\n  render() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text>Home Screen</Text>\n        <Button\n          title=\"Go to Details\"\n          onPress={() => {\n            /* 1. Navigate to the Details route with params */\n            this.props.navigation.navigate('Details', {\n              itemId: 86,\n              otherParam: 'anything you want here',\n            });\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nclass DetailsScreen extends React.Component {\n  render() {\n    /* 2. Read the params from the navigation state */\n    const { params } = this.props.navigation.state;\n    const itemId = params ? params.itemId : null;\n    const otherParam = params ? params.otherParam : null;\n\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text>Details Screen</Text>\n        <Text>itemId: {JSON.stringify(itemId)}</Text>\n        <Text>otherParam: {JSON.stringify(otherParam)}</Text>\n        <Button\n          title=\"Go to Details... again\"\n          onPress={() => this.props.navigation.navigate('Details')}\n        />\n        <Button\n          title=\"Go back\"\n          onPress={() => this.props.navigation.goBack()}\n        />\n      </View>\n    );\n  }\n}\n"})}),"\n",(0,s.jsx)("a",{href:"https://snack.expo.io/@react-navigation/navigate-with-params",target:"blank",class:"run-code-button",children:"\u2192 Run this code"}),"\n",(0,s.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"navigate"})," accepts an optional second argument to let you pass parameters to the route you are navigating to. For example: ",(0,s.jsx)(t.code,{children:"this.props.navigation.navigate('RouteName', {paramName: 'value'})"})," pushes a new route to the ",(0,s.jsx)(t.code,{children:"StackNavigator"}),", where the params are ",(0,s.jsx)(t.code,{children:"{paramName: 'value'}"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["You can read the params from ",(0,s.jsx)(t.code,{children:"this.props.navigation.state.params"}),". It is ",(0,s.jsx)(t.code,{children:"null"})," if no parameters are specified."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://snack.expo.io/@react-navigation/navigate-with-params",children:"Full source of what we have built so far"}),"."]}),"\n"]})]})}function h(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},50065:function(e,t,a){a.d(t,{Z:function(){return i},a:function(){return o}});var n=a(67294);let s={},r=n.createContext(s);function o(e){let t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);