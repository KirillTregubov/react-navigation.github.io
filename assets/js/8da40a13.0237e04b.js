"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([["50651"],{7339:function(e,t,i){i.r(t),i.d(t,{metadata:()=>n,contentTitle:()=>s,default:()=>d,assets:()=>c,toc:()=>l,frontMatter:()=>r});var n=JSON.parse('{"id":"switch-navigator","title":"SwitchNavigator reference","description":"RouteConfigs","source":"@site/versioned_docs/version-1.x/switch-navigator.md","sourceDirName":".","slug":"/switch-navigator","permalink":"/docs/1.x/switch-navigator","draft":false,"unlisted":false,"editUrl":"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-1.x/switch-navigator.md","tags":[],"version":"1.x","frontMatter":{"id":"switch-navigator","title":"SwitchNavigator reference","sidebar_label":"SwitchNavigator"},"sidebar":"api","previous":{"title":"StackNavigator","permalink":"/docs/1.x/stack-navigator"},"next":{"title":"TabNavigator","permalink":"/docs/1.x/tab-navigator"}}'),a=i("85893"),o=i("50065");let r={id:"switch-navigator",title:"SwitchNavigator reference",sidebar_label:"SwitchNavigator"},s=void 0,c={},l=[{value:"RouteConfigs",id:"routeconfigs",level:2},{value:"SwitchNavigatorConfig",id:"switchnavigatorconfig",level:2},{value:"Example",id:"example",level:2}];function h(e){let t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"SwitchNavigator(RouteConfigs, SwitchNavigatorConfig);\n"})}),"\n",(0,a.jsx)(t.h2,{id:"routeconfigs",children:"RouteConfigs"}),"\n",(0,a.jsxs)(t.p,{children:["The route configs object is a mapping from route name to a route config, which tells the navigator what to present for that route, see ",(0,a.jsx)(t.a,{href:"/docs/1.x/stack-navigator#routeconfigs",children:"example"})," from ",(0,a.jsx)(t.code,{children:"StackNavigator"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"switchnavigatorconfig",children:"SwitchNavigatorConfig"}),"\n",(0,a.jsx)(t.p,{children:"Several options get passed to the underlying router to modify navigation logic:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"initialRouteName"})," - The routeName for the initial tab route when first loading."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"resetOnBlur"})," - Reset the state of any nested navigators when switching away from a screen. Defaults to ",(0,a.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"paths"})," - Provide a mapping of routeName to path config, which overrides the paths set in the routeConfigs."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"backBehavior"})," - Should the back button cause a tab switch to the initial route? If yes, set to ",(0,a.jsx)(t.code,{children:"initialRoute"}),", otherwise ",(0,a.jsx)(t.code,{children:"none"}),". Defaults to ",(0,a.jsx)(t.code,{children:"none"})," behavior."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsxs)(t.p,{children:["See an example of this ",(0,a.jsx)(t.a,{href:"https://snack.expo.io/@react-navigation/auth-flow",children:"on Snack"}),"."]})]})}function d(e={}){let{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},50065:function(e,t,i){i.d(t,{Z:function(){return s},a:function(){return r}});var n=i(67294);let a={},o=n.createContext(a);function r(e){let t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);