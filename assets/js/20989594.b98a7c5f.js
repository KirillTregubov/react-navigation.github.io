"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([["38191"],{69511:function(e,n,t){t.r(n),t.d(n,{metadata:()=>r,contentTitle:()=>s,default:()=>l,assets:()=>c,toc:()=>p,frontMatter:()=>a});var r=JSON.parse('{"id":"route-prop","title":"Route prop reference","description":"Each screen component in your app is provided with the route prop automatically. The prop contains various information regarding current route (place in navigation hierarchy component lives).","source":"@site/versioned_docs/version-5.x/route-prop.md","sourceDirName":".","slug":"/route-prop","permalink":"/docs/5.x/route-prop","draft":false,"unlisted":false,"editUrl":"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-5.x/route-prop.md","tags":[],"version":"5.x","frontMatter":{"id":"route-prop","title":"Route prop reference","sidebar_label":"Route prop"},"sidebar":"docs","previous":{"title":"Options for screens","permalink":"/docs/5.x/screen-options"},"next":{"title":"Navigation prop","permalink":"/docs/5.x/navigation-prop"}}'),o=t("85893"),i=t("50065");let a={id:"route-prop",title:"Route prop reference",sidebar_label:"Route prop"},s=void 0,c={},p=[];function d(e){let n={code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Each ",(0,o.jsx)(n.code,{children:"screen"})," component in your app is provided with the ",(0,o.jsx)(n.code,{children:"route"})," prop automatically. The prop contains various information regarding current route (place in navigation hierarchy component lives)."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"route"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"key"})," - Unique key of the screen. Created automatically or added while navigating to this screen."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"name"})," - Name of the screen. Defined in navigator component hierarchy."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"params"})," - An optional object containing params which is defined while navigating e.g. ",(0,o.jsx)(n.code,{children:"navigate('Twitter', { user: 'Dan Abramov' })"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"function ProfileScreen({ route }) {\n  return (\n    <View>\n      <Text>This is the profile screen of the app</Text>\n      <Text>{route.name}</Text>\n    </View>\n  );\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You might also find a ",(0,o.jsx)(n.code,{children:"state"})," property on the route object in some cases. This property contains the child navigator's state and may exist when you have a navigator inside this screen. It's important to note that ",(0,o.jsxs)(n.strong,{children:["this property may be ",(0,o.jsx)(n.code,{children:"undefined"})]})," even if you have a child navigator. It gets initialized only after the first navigation in the child navigator. It's ",(0,o.jsx)(n.strong,{children:"not recommended"})," to use this property."]})]})}function l(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},50065:function(e,n,t){t.d(n,{Z:function(){return s},a:function(){return a}});var r=t(67294);let o={},i=r.createContext(o);function a(e){let n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);