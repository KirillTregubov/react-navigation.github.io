"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([["66749"],{53542:function(n,t,e){e.r(t),e.d(t,{metadata:()=>i,contentTitle:()=>s,default:()=>d,assets:()=>c,toc:()=>l,frontMatter:()=>r});var i=JSON.parse('{"id":"with-navigation","title":"withNavigation","description":"withNavigation is a higher order component which passes the navigation prop into a wrapped component. It\'s useful when you cannot pass the navigation prop into the component directly, or don\'t want to pass it in case of a deeply nested child.","source":"@site/versioned_docs/version-2.x/with-navigation.md","sourceDirName":".","slug":"/with-navigation","permalink":"/docs/2.x/with-navigation","draft":false,"unlisted":false,"editUrl":"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-2.x/with-navigation.md","tags":[],"version":"2.x","frontMatter":{"id":"with-navigation","title":"withNavigation","sidebar_label":"withNavigation"},"sidebar":"version-2.x-api","previous":{"title":"createMaterialTopTabNavigator","permalink":"/docs/2.x/material-top-tab-navigator"},"next":{"title":"withNavigationFocus","permalink":"/docs/2.x/with-navigation-focus"}}'),o=e("85893"),a=e("50065");let r={id:"with-navigation",title:"withNavigation",sidebar_label:"withNavigation"},s=void 0,c={},l=[{value:"Example",id:"example",level:2},{value:"Notes",id:"notes",level:2}];function p(n){let t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"withNavigation"})," is a higher order component which passes the ",(0,o.jsx)(t.code,{children:"navigation"})," prop into a wrapped component. It's useful when you cannot pass the ",(0,o.jsx)(t.code,{children:"navigation"})," prop into the component directly, or don't want to pass it in case of a deeply nested child."]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"withNavigation(Component)"})," returns a Component."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"import React from 'react';\nimport { Button } from 'react-native';\nimport { withNavigation } from 'react-navigation';\n\nclass MyBackButton extends React.Component {\n  render() {\n    return (\n      <Button\n        title=\"Back\"\n        onPress={() => {\n          this.props.navigation.goBack();\n        }}\n      />\n    );\n  }\n}\n\n// withNavigation returns a component that wraps MyBackButton and passes in the\n// navigation prop\nexport default withNavigation(MyBackButton);\n"})}),"\n",(0,o.jsx)(t.h2,{id:"notes",children:"Notes"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["If you wish to use the ",(0,o.jsx)(t.code,{children:"ref"})," prop on the wrapped component, you must pass the ",(0,o.jsx)(t.code,{children:"onRef"})," prop instead. For example,"]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"// MyBackButton.ts\nexport default withNavigation(MyBackButton);\n\n// MyNavBar.ts\n<MyBackButton onRef={(elem) => this.backButton = elem} />\n"})})]})}function d(n={}){let{wrapper:t}={...(0,a.a)(),...n.components};return t?(0,o.jsx)(t,{...n,children:(0,o.jsx)(p,{...n})}):p(n)}},50065:function(n,t,e){e.d(t,{Z:function(){return s},a:function(){return r}});var i=e(67294);let o={},a=i.createContext(o);function r(n){let t=i.useContext(a);return i.useMemo(function(){return"function"==typeof n?n(t):{...t,...n}},[t,n])}function s(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),i.createElement(a.Provider,{value:t},n.children)}}}]);