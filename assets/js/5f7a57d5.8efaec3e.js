"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([[11534],{71154:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>u});var t=n(85893),o=n(11151);const c={id:"use-is-focused",title:"useIsFocused",sidebar_label:"useIsFocused"},r=void 0,i={id:"use-is-focused",title:"useIsFocused",description:"We might want to render different content based on the current focus state of the screen. The library exports a useIsFocused hook to make this easier:",source:"@site/versioned_docs/version-6.x/use-is-focused.md",sourceDirName:".",slug:"/use-is-focused",permalink:"/docs/6.x/use-is-focused",draft:!1,unlisted:!1,editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-6.x/use-is-focused.md",tags:[],version:"6.x",frontMatter:{id:"use-is-focused",title:"useIsFocused",sidebar_label:"useIsFocused"},sidebar:"docs",previous:{title:"useFocusEffect",permalink:"/docs/6.x/use-focus-effect"},next:{title:"useLinkTo",permalink:"/docs/6.x/use-link-to"}},a={},u=[{value:"Using with class component",id:"using-with-class-component",level:2}];function d(e){const s={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["We might want to render different content based on the current focus state of the screen. The library exports a ",(0,t.jsx)(s.code,{children:"useIsFocused"})," hook to make this easier:"]}),"\n",(0,t.jsx)("samp",{id:"use-is-focused"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"import { useIsFocused } from '@react-navigation/native';\n\n// ...\n\nfunction Profile() {\n  const isFocused = useIsFocused();\n\n  return <Text>{isFocused ? 'focused' : 'unfocused'}</Text>;\n}\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Note that using this hook triggers a re-render for the component when the screen it's in changes focus. This might cause lags during the animation if your component is heavy. You might want to extract the expensive parts to separate components and use ",(0,t.jsx)(s.a,{href:"https://react.dev/reference/react/memo",children:(0,t.jsx)(s.code,{children:"React.memo"})})," or ",(0,t.jsx)(s.a,{href:"https://react.dev/reference/react/PureComponent",children:(0,t.jsx)(s.code,{children:"React.PureComponent"})})," to minimize re-renders for them."]}),"\n",(0,t.jsx)(s.h2,{id:"using-with-class-component",children:"Using with class component"}),"\n",(0,t.jsx)(s.p,{children:"You can wrap your class component in a function component to use the hook:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"class Profile extends React.Component {\n  render() {\n    // Get it from props\n    const { isFocused } = this.props;\n  }\n}\n\n// Wrap and export\nexport default function (props) {\n  const isFocused = useIsFocused();\n\n  return <Profile {...props} isFocused={isFocused} />;\n}\n"})})]})}function h(e={}){const{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,s,n)=>{n.d(s,{Z:()=>i,a:()=>r});var t=n(67294);const o={},c=t.createContext(o);function r(e){const s=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(c.Provider,{value:s},e.children)}}}]);